<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mapper.ReplyMapper">	<!-- 인터페이스가 있는 경로 설정하기! -->
	<!-- [5-7] 매퍼 생성. 기존에 있던 다른 mapper.xml 파일 그대로 활용하는게 좋음 -->
	<!-- [5-8] 간단하게 모든 댓글 가져오는 SELECT 문 만들기 -->
	<select id="selectList" parameterType="int">
		SELECT 	reply_no
				,replyer
				,reply
				,board_num
				,reply_date
		FROM 	tbl_reply
		WHERE	board_num = #{bno}
		ORDER BY reply_no
	
	</select>

	<!-- [9-4] 페이징을 위한 SELECT -->
	<!-- `<=`은 컴파일 오류(여는 태그와 동일)가 발생할 수 있으므로 CDATA를 사용하여 커버쳐주기-->
	<!-- 다른 말로 하면, CDATA는 SQL 구문 전체를 감싸도 문제는 없음.-->
	<select id="selectListPaging" parameterType="com.yedam.common.SearchDTO">
		SELECT b.*
		FROM (  SELECT /*+ INDEX_DESC (r PK_REPLY) */ rownum rn, r.*
						FROM tbl_reply r
						WHERE board_num = #{boardNo}) b
		<![CDATA[
		WHERE b.rn <= #{page} * 5
		]]>
			AND b.rn > (#{page} - 1) * 5
	</select>
	
	<select id="selectReplyCount" parameterType="int">
		SELECT count(1)
		FROM tbl_reply
		WHERE board_num = #{bno}
	</select>


	<!-- [5-d] -->
	<delete id="deleteReply" parameterType="int">
		DELETE FROM tbl_reply
		WHERE reply_no = #{rno}
		</delete>
		
		<delete id="deleteReplys" parameterType="String">	<!-- 여러 건 DELETE는 WHERE절 안에서 IN (?, ?, ?...) 형태로 사용-->
		DELETE FROM tbl_reply
		WHERE reply_no IN
			<foreach collection="array" item="reply" open="(" separator="," close=")">	<!-- (1, 2, 3)을 쉽게 구현하기 위해 여러 속성을 사용 -->
			#{reply} 
			</foreach>
	</delete>
	
	
	<select id="selectKey" resultType="int">
		SELECT reply_seq.NEXTVAL
		FROM dual
	</select>
	
	
	<insert id="addReply" parameterType="com.yedam.vo.ReplyVO">
		INSERT INTO tbl_reply (reply_no, replyer, reply, board_num)
		VALUES (reply_seq.NEXTVAL, #{replyer}, #{reply}, #{boardNum})
	</insert>
	

</mapper>